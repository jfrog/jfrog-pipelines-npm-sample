valuesFilePath: ./values.yml

resources:
  # - name: app_repo
  #   type: GitRepo
  #   configuration:
  #     gitProvider: {{ .Values.myRepo.gitProvider }}
  #     path: {{ .Values.myRepo.path }}
  #     branches:
  #       include: master

  - name: pre_promoted_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.myRepo.artifactory }}
      buildName: venortso_npm
      buildNumber: 3

  - name: promoted_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.myRepo.artifactory }}
      buildName: venortso_npm_promoted
      buildNumber: 3

pipelines:
  - name: venortso_npm_promote
    steps:
      - name: fetch_conditions
        type: Bash
        configuration:
          integrations:
            - name:  {{ .Values.myRepo.artifactory }}  # required
            - name:  {{ .Values.myRepo.tokenIntegration }} 
            - name:  venortso_credentials  
          inputResources:
            - name: npm_repo_jfp_venortso         # required
              trigger: false
            # - name: cron_trigger_npm
        execution:
            onExecute:
              - echo "Running Bash"
              - add_run_variables promote="true"
              - export key1=int_venortso_crendentials_key1
              - export key2=int_venortso_crendentials_key2
              - export key3=int_venortso_crendentials_key3
              - echo "key1 = ${key1}, key2 = ${key2}, key3 = ${key3}"
              - if [ "$key1" == "value1" ] && [ "$key2" == "value2" ] && [ "$key3" == "value3" ]; then export promote=true; else export promote=false; fi
              - echo "promote = ${promote}"
              - if [ "$promote" == "false" ]; then exit 1; fi
            onComplete:
                - echo "promote = ${promote}"
                 
      - name: promote
        type: PromoteBuild
        configuration:
          condition: promote == "true"
          #inherits all the tags from bash
          targetRepository: {{ .Values.myRepo.targetRepo }}
          # includeDependencies:  false
          status:  "success"
          comment: "Promoting to 1.0.1"
          inputSteps:
              - name: fetch_conditions
          inputResources:
            - name: pre_promoted_buildinfo   # required
          outputResources:
            - name: promoted_buildinfo   # required
          copy: true

        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"